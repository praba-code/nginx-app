name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      run: docker build -t nginx-app .

    - name: Prepare SSH key for EC2
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" | base64 --decode > ~/.ssh/ecs_key.pem
        chmod 600 ~/.ssh/ecs_key.pem

    - name: Deploy to EC2 and Run Docker Container
      run: |
        # SSH into the EC2 instance
        ssh -o StrictHostKeyChecking=no -i LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0KYjNCbGJuTnphQzFyWlhrdGRqRUFB
QUFBQkc1dmJtVUFBQUFFYm05dVpRQUFBQUFBQUFBQkFBQUNGd0FBQUFkemMyZ3RjbgpOaEFBQUFB
d0VBQVFBQUFnRUFqZmtGQUF6bVdWZjhwbXRjb3BtYmw2ZEgyL3RaK0VjV2YvWW5oSGVXUVlzQWNW
dGVFa2l1CjZPRnlmR0c0QW9BaklwVXhSODh5dzd2V2R6dnlTUHpubnI2SlUzSndoUVZ1N2xQSFN6
cWd4Q1hHTFF2UW9nZWxQZXl5TkEKeURTd1dEL3lOWjNRVlFTYTBJZDNqTmJoSXF3VzEvRnk1S1g4
YmxSMzkwMzNBZ3YyK2lpTDFaMFpCbWdFaVZETUU4dlY4VgpDaWJSM1NSRThUQXM4dUZ6ay84K2Z0
K05kQ2NlZk1aeW93bFZrZk96Ni9YQ0FwNGVGbmF2Yk1hWURocDRsb1FDb29QM1hhCi90dk4wcG1O
em9zS00vdzdCdVJXWDNNRHlnd1M2eFZ5M1ZRazgrdzNHbmh5enJaSGQrQ3AxazZHcXdDMXlzNkY5
K29MU1QKS0RXd1FTbFpJTUdCMjVrV2NQTmZhODBRQ09ma2wycTJybTJ3NlV1TmJ4OXhLeVp4b1p0
V0lYM3IxM0FneURNb3FOUEVabgphTXUyZ2hyZnJTZ3VJNVQ2ZVFpbjZ1ODh4OWpJRGNyd1VHK0R5
czJvd0VBUVowMnZuTnRPOTZLaWwxcm5HTjhwdCthZm5FCjVqeGlUV25OeWVZWWFkQ09xN2dKWE82
QlVxLy9zemhzZ25mMmE1c0JIV20wVmJSMzFsdnlLU2xpQjR4OWR3dlNNQ2NCWmUKR2ZEeG1jcmty
TEd1MWZFcEV0bjRaVWtqRUY3MFQzRlR2K21zMTdRbGhMWWhtRDlWRG5KdTRaTWJVWENrcG9pSEwv
d2dJbApiTmd6K3JFQjRtSWpsbmdMMHFnUkVFbmo5aDRGRElwbStMRStxcGY5QXF3U2c1dFJMYVpV
b2xhUlJ5RFNUQ0UvcUVmMmg2CjhBQUFkUUpNelJyU1RNMGEwQUFBQUhjM05vTFhKellRQUFBZ0VB
amZrRkFBem1XVmY4cG10Y29wbWJsNmRIMi90WitFY1cKZi9ZbmhIZVdRWXNBY1Z0ZUVraXU2T0Z5
ZkdHNEFvQWpJcFV4Ujg4eXc3dldkenZ5U1B6bm5yNkpVM0p3aFFWdTdsUEhTegpxZ3hDWEdMUXZR
b2dlbFBleXlOQXlEU3dXRC95TlozUVZRU2EwSWQzak5iaElxd1cxL0Z5NUtYOGJsUjM5MDMzQWd2
MitpCmlMMVowWkJtZ0VpVkRNRTh2VjhWQ2liUjNTUkU4VEFzOHVGemsvOCtmdCtOZENjZWZNWnlv
d2xWa2ZPejYvWENBcDRlRm4KYXZiTWFZRGhwNGxvUUNvb1AzWGEvdHZOMHBtTnpvc0tNL3c3QnVS
V1gzTUR5Z3dTNnhWeTNWUWs4K3czR25oeXpyWkhkKwpDcDFrNkdxd0MxeXM2Rjkrb0xTVEtEV3dR
U2xaSU1HQjI1a1djUE5mYTgwUUNPZmtsMnEycm0ydzZVdU5ieDl4S3laeG9aCnRXSVgzcjEzQWd5
RE1vcU5QRVpuYU11MmdocmZyU2d1STVUNmVRaW42dTg4eDlqSURjcndVRytEeXMyb3dFQVFaMDJ2
bk4KdE85NktpbDFybkdOOHB0K2FmbkU1anhpVFduTnllWVlhZENPcTdnSlhPNkJVcS8vc3poc2du
ZjJhNXNCSFdtMFZiUjMxbAp2eUtTbGlCNHg5ZHd2U01DY0JaZUdmRHhtY3JrckxHdTFmRXBFdG40
WlVrakVGNzBUM0ZUdittczE3UWxoTFlobUQ5VkRuCkp1NFpNYlVYQ2twb2lITC93Z0lsYk5neity
RUI0bUlqbG5nTDBxZ1JFRW5qOWg0RkRJcG0rTEUrcXBmOUFxd1NnNXRSTGEKWlVvbGFSUnlEU1RD
RS9xRWYyaDY4QUFBQURBUUFCQUFBQ0FCWkZNTDZhOGhYNUVsMjhvUHhmVE02VGpxeDRRakJnWGxi
VwpTSFA1YjYxNlhpaHArbGl6T1dvTjFnVk5ndGcwUE02em5vRUlMellRVDEvR3h6RWgwdWQ0NEt2
TUJpWFNVMTRPbXZMaHV5ClErLzFaRG16SS9oc2FFVEVrK2lUM2ZHMG5qYnJqdFEzU1FoYS9RQXZ3
NE1mMXVRcTIzMzRkNStLOVMxQVRVdEVrSXB2TlMKTGVFTXMySW8xZVg1VGZZd0VHbldRR2RkeFhR
Y0V0WktwL1JZUHFKczg1QjcyUndlT1E5UUZkeUk0UGxXUkxKZndUMHBndgpKMDQwSHdieEsvN3lD
S2Jqd3VXUVJJOW1SNTRBVU5VVXhPR2JqSWVqMEJLdit0Wm1OKzEyRnp5Q3hQdGhyTjRMZzlja2U4
CnB0UGxJR3UzMlpFSW9jd1laMWtRWUVTVElETE0vSHNSRmFhL094UUo5d2RqYjY0QzlvZkxOUUNj
RzJUSWJ5MWJMbzN0TEMKL1JUWks3QnY1TFYxZDkzcENvZ3V6eERVdTM3aktkRjY4TXpQdUZWQis1
aTVwU2MwYXlRQ29KN3hFYk1nQnEycGxjUXYyQwo0TXhFZDV5OFBzcy9vNkVKWmg4c0swUnV4U2hG
RlYxb3JsczN0akc2a0YzQ2ppZzlZdnBLdzQwdk02VlBDbUVjazRsbExqClBDUk55VXBhakp1eWxZ
NzRRbFkyQjRlK0NsTWRPQkQ3VlhXUHBHenlyem84R1JJVFE4amNnbVJyT1hhcThFUFFJT25CS3gK
RmtxdE52V0F2TXlYQWdIRnNycU0yMXN6eGZFYUhuTlhJSHRPaytSR09YNitYZkdWeHVvRVNBWEVz
c0VpaWc2S2w2MklEZQpPQTZ4RkRVQ043TXZXcDRYb3hBQUFCQUFiV0UvbFUyTHhadnFPajQ0dngz
R3dmbzE5Z0NCb2JoTGtGaUZRMzd6VlhDOVlGCmZBVFJGTThDcytRMm9ISkw2dmpHSWllZXJTbmFP
aG9ObzJBN1BvbUFSYjlmOEE0SWVueE9UNExoWFc1eGFxUXdUblhLUEsKMnRLd3Vnbk9BUXNPZFBH
MWdtOHI0QWEvdUNJN1Rwemk2QWFlMU9oZ3BNSTZrUVFoSXYwbC9pRFB2eXMwOXVpVTlkNUtkTwpI
ZDRYclcvUm9RWEFHZUFDUWFvQTBnRWJ4SlpHR2ZybWdPMHV2YU1jN0FNR3d5VzJvT3E3ZmVydjZi
L1ovTkxmSitsd3VhClpYNll2UzZWWXJPU3doZ3N1dk9iZytnTmZYeXJodlBleDcyT2c2R0t0RGg3
RzlsVVNDMDhXR3NqMmd6N2FDN0Qra2NFQ0wKRkVKVndGYTlUZ1VSUGE4QUFBRUJBTWZwM2tkUU1w
cjViYnltNDhVSUdoMTB6cFcrbVRGOFpIb3d2YXN0VUUxV0FsVm1HMApGdUplS0lGWE5hUGRTbUZB
cHVYK3JaVWdxSHRYRnJjZnRpOWNYT3NxbS82YmRHWkM2S3QyVFFjdGtTbktwYVRwT0MvNTNiCnFm
dUZhUEducERZcGxPWWE1emJadll5ZGM4VVZyN1Zac2VBKzFGTWszbnlVNzdBT3FpNUFxaUdBUzNI
YmRYeEN3QXFDMVkKanJhemloaGZta0V5M3oxa09ndkhlN1ZQR3l3Y0pPYks5RWg1RVErcDhId2pi
aXJVRGp4K1lBZW94dlhta3cvMDRzcFBjMAprS0UrZjgyQmRiZmdvdkVJaXh3dnA5RDM0R1d6SUpC
U1ZlU0xiT0RTbmUrWjZPTHlDcG5PQTI2SjhaUXJJeUVmK1d4SktQClpKL0hyTkJvVW16OGNBQUFF
QkFMWE52ajdTbjcxWXlhY2RqUGN3bnpQQ3gvUFpuV0RIbFd0OUQ0MEVEMFdINzkrN2tGdFAKOHJM
RU51a1prajl5L1Z4M1RBb3FRQ2lHdWQzS3h0d3NIZE5tM09DQ3FtdmpGYzd3SGQ0TnNIQUhlSGZW
UEtCODVPZVhvVQo0Z2xzakZLcWhjTFZpMVZhRkpqVmdBNjlFNWZLOXY2SWNuKzBvT1VSQlVNTWdi
d0lhMEsxVGsrUU00Smg3ZkV3dy9FazBYCmNYY0JKRUsxZVVzNzJQbXJFWHMyWjF2T1NkZXJ3SlpN
WGtJeEd2RWVsRG85czhxNXg2T3pEdlRIbWh4Q2VEWXNucmR6MDUKS1VOUmZIUGI4V2RPWHZhWmZs
ckFibzY4L3QzMHZxKzRVUmZlRUFWS0Z5R2FWQ2poaHF6SXFDUW9xYjBOWnF2OThKWnVscAppWmpL
WWFBOFdOa0FBQUFWY205dmRFQnBjQzB4TnpJdE16RXRNVGN0TVRNeEFRSURCQVVHCi0tLS0tRU5E
IE9QRU5TU0ggUFJJVkFURSBLRVktLS0tLQo=
 ubuntu@3.0.175.228 << 'EOF'
          # Ensure Docker is running on EC2
          sudo systemctl start docker || echo "Docker already running"

          # Remove any previous instance of the container
          docker stop nginx-app || true
          docker rm nginx-app || true

          # Create app directory
          mkdir -p ~/app

          # Build and run the Docker container
          cd ~/app
          docker build -t nginx-app .
          docker run -d -p 80:80 --name nginx-app nginx-app
        EOF
      env:
        EC2_PUBLIC_IP: 3.0.175.228

